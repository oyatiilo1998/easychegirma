// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/action": {
            "post": {
                "description": "API for creating action",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "action"
                ],
                "summary": "Create Action",
                "parameters": [
                    {
                        "description": "action",
                        "name": "action",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.CreateAction"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/action-history": {
            "get": {
                "description": "API for getting all action history",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "action-history"
                ],
                "summary": "Getting All Action Histories",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_service.GetAllActionHistoriesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/action-history-entity/{entity_id}": {
            "get": {
                "description": "API for getting all entity action history",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "action-history"
                ],
                "summary": "Getting All Entity Action Histories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "entity_id",
                        "name": "entity_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_user_service.GetActionHistoryByEntityIDSwag"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/action-history-staffs/{staff_id}": {
            "get": {
                "description": "API for getting last 20 action history by staff id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "action-history"
                ],
                "summary": "Getting last 20 Action Histories by staff id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "staff_id",
                        "name": "staff_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_service.GetAllActionHistoriesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/action-history/{action_history_id}": {
            "get": {
                "description": "API for getting action history",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "action-history"
                ],
                "summary": "Get Action History",
                "parameters": [
                    {
                        "type": "string",
                        "description": "action_history_id",
                        "name": "action_history_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_service.ActionHistory"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/action-parallel": {
            "patch": {
                "description": "API is to create action action relation action-\u003e ACTION_SENDS_PARALLEL -\u003e action",
                "consumes": [
                    "application/json",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "action"
                ],
                "summary": "Create action action relation action-\u003e ACTION_SENDS_PARALLEL -\u003e action",
                "parameters": [
                    {
                        "description": "action",
                        "name": "action",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.UpdateActionSendsParallelRequestSwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.ActionSendsStepRelationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/action-step": {
            "patch": {
                "description": "API is to create action action relation action-\u003e ACTION_SENDS_STEP -\u003e action",
                "consumes": [
                    "application/json",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "action"
                ],
                "summary": "Create action action relation action-\u003e ACTION_SENDS_STEP -\u003e action",
                "parameters": [
                    {
                        "description": "action",
                        "name": "action",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.UpdateActionSendsStepRequestSwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.ActionSendsStepRelationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/action/{action_id}": {
            "put": {
                "description": "API for updating action",
                "consumes": [
                    "application/json",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "action"
                ],
                "summary": "Update Action",
                "parameters": [
                    {
                        "type": "string",
                        "description": "action_id",
                        "name": "action_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "action",
                        "name": "action",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.CreateAction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/actions": {
            "put": {
                "description": "API for updating multiple action",
                "consumes": [
                    "application/json",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "action"
                ],
                "summary": "Update multiple action",
                "parameters": [
                    {
                        "description": "action",
                        "name": "action",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.UpdateMultipleActionsSwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.EmptyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/announcement": {
            "get": {
                "description": "API for getting all announcementes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "announcement"
                ],
                "summary": "Getting All announcementes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/setting_service.GetAllAnnouncementsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API for creating announcement",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "announcement"
                ],
                "summary": "Create announcement",
                "parameters": [
                    {
                        "description": "Announcement",
                        "name": "announcement",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_setting_service.CreateAnnouncementSwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/setting_service.CreatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/announcement/{announcement_id}": {
            "get": {
                "description": "API for getting announcement",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "announcement"
                ],
                "summary": "Get Announcement",
                "parameters": [
                    {
                        "type": "string",
                        "description": "announcement_id",
                        "name": "announcement_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/setting_service.Announcement"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "API for updating announcement",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "announcement"
                ],
                "summary": "Update announcement",
                "parameters": [
                    {
                        "type": "string",
                        "description": "announcement_id",
                        "name": "announcement_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "announcement",
                        "name": "announcement",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_setting_service.CreateAnnouncementSwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/setting_service.CreatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/applicant": {
            "get": {
                "description": "API for getting all applicants",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "applicant"
                ],
                "summary": "Getting All Applicants",
                "parameters": [
                    {
                        "type": "string",
                        "name": "full_name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "passport_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "phone_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "pinfl",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "user_type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_service.GetAllApplicantsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API for creating applicant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "applicant"
                ],
                "summary": "Create applicant",
                "parameters": [
                    {
                        "description": "applicant",
                        "name": "applicant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_user_service.CreateUpdateApplicantSwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/user_service.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/applicant-by-token": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for getting applicant by token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "applicant"
                ],
                "summary": "Get Applicant by token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_service.Applicant"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/applicant-entity-draft/{user_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for getting all entity drafts by user id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity-draft"
                ],
                "summary": "Getting All draft entities by user id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity_service.GetAllEntityDraftsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/applicant/one-id/{code}": {
            "get": {
                "description": "API for get applicant one-id token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "applicant"
                ],
                "summary": "Get Applicant one-id token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_service.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/applicant/{applicant_id}": {
            "get": {
                "description": "API for getting applicant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "applicant"
                ],
                "summary": "Get Applicant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "applicant_id",
                        "name": "applicant_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_service.Applicant"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "API for updating applicant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "applicant"
                ],
                "summary": "Update Applicant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "applicant_id",
                        "name": "applicant_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "applicant",
                        "name": "applicant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_user_service.CreateUpdateApplicantSwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_service.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/business-process/{diagram_id}": {
            "get": {
                "description": "API for getting business process",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "business-process"
                ],
                "summary": "Get business process",
                "parameters": [
                    {
                        "type": "string",
                        "description": "diagram_id",
                        "name": "diagram_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.GetOneStep"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/business-type": {
            "get": {
                "description": "API for getting all Business Types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "business-type"
                ],
                "summary": "Getting Business Types",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.GetAllBusinessTypesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API for creating business_type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "business-type"
                ],
                "summary": "Create business_type",
                "parameters": [
                    {
                        "description": "Business Type",
                        "name": "business_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.CreateUpdateBusinessTypeSwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/business-type/{business_type_id}": {
            "put": {
                "description": "API for updating Business Type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "business-type"
                ],
                "summary": "Update Business Type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "business_type_id",
                        "name": "business_type_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Business Type",
                        "name": "Type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.CreateUpdateBusinessTypeSwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.EmptyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/category": {
            "get": {
                "description": "API for getting all categoryes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "Getting All categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "soato",
                        "name": "soato",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/setting_service.GetAllCategoriesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API for creating category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "Create category",
                "parameters": [
                    {
                        "description": "Category",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_setting_service.CreateUpdateCategorySwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/setting_service.CreatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/category/{category_id}": {
            "get": {
                "description": "API for getting category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "Get Category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category_id",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/setting_service.Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "API for updating category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "Update category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category_id",
                        "name": "category_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "category",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_setting_service.CreateUpdateCategorySwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/setting_service.CreatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/check-orders": {
            "get": {
                "description": "Check order status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auction-order"
                ],
                "summary": "Check order status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "615ab2cf8f371feaf769a533",
                        "name": "entity_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_integration_service.CheckOrderStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/city": {
            "get": {
                "description": "API for getting all cityes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "city"
                ],
                "summary": "Getting All cities",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "soato",
                        "name": "soato",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/setting_service.GetAllCitiesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API for creating city",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "city"
                ],
                "summary": "Create city",
                "parameters": [
                    {
                        "description": "City",
                        "name": "city",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_setting_service.CreateUpdateCitySwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/setting_service.CreatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/city/{city_id}": {
            "get": {
                "description": "API for getting city",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "city"
                ],
                "summary": "Get City",
                "parameters": [
                    {
                        "type": "string",
                        "description": "city_id",
                        "name": "city_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/setting_service.City"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "API for updating city",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "city"
                ],
                "summary": "Update city",
                "parameters": [
                    {
                        "type": "string",
                        "description": "city_id",
                        "name": "city_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "city",
                        "name": "city",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_setting_service.CreateUpdateCitySwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/setting_service.CreatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/construction-type": {
            "get": {
                "description": "API for getting all ConstructionType",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "construction-type"
                ],
                "summary": "Getting All ConstructionType",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/setting_service.GetAllConstructionTypesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API for creating constructionType",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "construction-type"
                ],
                "summary": "Create constructionType",
                "parameters": [
                    {
                        "description": "construction_type",
                        "name": "constructionType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_setting_service.CreateUpdateConstructionTypeSwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/construction-type/{construction_type_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "construction-type"
                ],
                "summary": "Get constructionType",
                "parameters": [
                    {
                        "type": "string",
                        "description": "construction_type_id",
                        "name": "construction_type_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/setting_service.ConstructionType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "API for updating construction-type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "construction-type"
                ],
                "summary": "Update construction-type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "construction_type_id",
                        "name": "construction_type_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "construction_type",
                        "name": "construction-type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_setting_service.CreateUpdateConstructionTypeSwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/dashboard-count-by-cities": {
            "get": {
                "description": "API for getting all entity with properties",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dashboard"
                ],
                "summary": "Getting All entity ` + "`" + `with` + "`" + ` properties",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity_service.GetAllEntitiesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/dashboard-new-entities": {
            "get": {
                "description": "API for getting all entity with properties",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dashboard"
                ],
                "summary": "Getting All entity ` + "`" + `with` + "`" + ` properties",
                "parameters": [
                    {
                        "type": "string",
                        "description": "city_id",
                        "name": "city_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "region_id",
                        "name": "region_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "entity_number",
                        "name": "entity_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "status_id",
                        "name": "status_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity_service.GetAllEntitiesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/diagram": {
            "get": {
                "description": "API for getting all diagrams",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "diagram"
                ],
                "summary": "Getting diagrams",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "code",
                        "name": "code",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.GetAllDiagramsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API for creating diagram",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "diagram"
                ],
                "summary": "Create diagram",
                "parameters": [
                    {
                        "description": "diagram",
                        "name": "diagram",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.CreateUpdateDiagramSwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/diagram-relation-step": {
            "patch": {
                "description": "API is to create diagrams diagram relation diagrams-\u003e diagram_HAS_STEP -\u003e step",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "diagram"
                ],
                "summary": "Create diagrams diagram relation diagrams-\u003e diagram_HAS_STEP -\u003e step",
                "parameters": [
                    {
                        "description": "applicant",
                        "name": "diagram",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.CreateDiagramStepRelationRequestSwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.EmptyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/diagram-relation/{relation_id}": {
            "delete": {
                "description": "API for deleting relation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "diagram"
                ],
                "summary": "delete relation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "relation_id",
                        "name": "relation_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.EmptyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/diagram/{diagram_id}": {
            "get": {
                "description": "API for getting diagram",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "diagram"
                ],
                "summary": "Get diagram",
                "parameters": [
                    {
                        "type": "string",
                        "description": "diagram_id",
                        "name": "diagram_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.Diagram"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "API for updating diagram",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "diagram"
                ],
                "summary": "Update diagram",
                "parameters": [
                    {
                        "type": "string",
                        "description": "diagram_id",
                        "name": "diagram_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "diagram",
                        "name": "diagram",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.CreateUpdateDiagramSwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.EmptyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/diagram/{node_id}": {
            "delete": {
                "description": "API for deleting node",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "diagram"
                ],
                "summary": "delete node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "node_id",
                        "name": "node_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.EmptyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/district": {
            "get": {
                "description": "API for getting all districtes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "district"
                ],
                "summary": "Getting All districts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "soato",
                        "name": "soato",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/setting_service.GetAllDistrictsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API for creating district",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "district"
                ],
                "summary": "Create district",
                "parameters": [
                    {
                        "description": "district",
                        "name": "district",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_setting_service.CreateUpdateDistrictSwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/setting_service.CreatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/district/{district_id}": {
            "get": {
                "description": "API for getting district",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "district"
                ],
                "summary": "Get district",
                "parameters": [
                    {
                        "type": "string",
                        "description": "district_id",
                        "name": "district_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "API for updating district",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "district"
                ],
                "summary": "Update district",
                "parameters": [
                    {
                        "type": "string",
                        "description": "district_id",
                        "name": "district_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "district",
                        "name": "district",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_setting_service.CreateUpdateDistrictSwag"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "API for updating district cost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "district"
                ],
                "summary": "Update district cost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "district_id",
                        "name": "district_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "cost",
                        "name": "cost",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_setting_service.UpdateDistrictCostSwag"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/districts/{city_id}/{region_id}": {
            "get": {
                "description": "API for getting all districts by region ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "district"
                ],
                "summary": "Getting All districts by region ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "city_id",
                        "name": "city_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "region_id",
                        "name": "region_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/setting_service.GetAllDistrictsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/entity": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for getting all entities",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity"
                ],
                "summary": "Getting All entities",
                "parameters": [
                    {
                        "type": "string",
                        "name": "city_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "entity_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "entity_soato",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "entity_type_code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2021-11-21",
                        "name": "from_date",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "region_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "staff_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "staff_soato",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "status_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2021-11-21",
                        "name": "to_date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity_service.GetAllEntitiesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for creating entity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity"
                ],
                "summary": "Create entity",
                "parameters": [
                    {
                        "description": "entity",
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_entity_service.CreateUpdateEntitySwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/entity-collection": {
            "get": {
                "description": "API for getting all entity collections",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity"
                ],
                "summary": "Getting All entity collections",
                "parameters": [
                    {
                        "type": "string",
                        "description": "collection_name",
                        "name": "collection_name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "search",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity_service.GetCollectionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/entity-count": {
            "get": {
                "description": "API for getting entity count",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity"
                ],
                "summary": "get entity count",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_entity_service.GetEntityCountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/entity-draft": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for getting all entity drafts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity-draft"
                ],
                "summary": "Getting All draft entities",
                "parameters": [
                    {
                        "type": "string",
                        "name": "city_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "entity_draft_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2021-11-21",
                        "name": "from_date",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "region_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "status_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "2021-11-21",
                        "name": "to_date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity_service.GetAllEntityDraftsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for creating entity draft",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity-draft"
                ],
                "summary": "Create entity draft",
                "parameters": [
                    {
                        "description": "entity",
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_entity_service.EntityDraftSwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/entity-draft-expired": {
            "get": {
                "description": "API for getting expired entity drafts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity-draft"
                ],
                "summary": "Getting expired draft entities",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity_service.GetAllEntityDraftsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/entity-draft-property/{entity_draft_id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for updating entity draft reject",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity-draft"
                ],
                "summary": "Update entity draft reject",
                "parameters": [
                    {
                        "type": "string",
                        "description": "entity_draft_id",
                        "name": "entity_draft_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "entity",
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_entity_service.UpdateEntityDraftPropertySwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.EmptyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/entity-draft-status": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for updating entity draft status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity-draft"
                ],
                "summary": "Update entity draft status",
                "parameters": [
                    {
                        "description": "entity",
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_entity_service.UpdateEntityDraftStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.EmptyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/entity-draft/{entity_draft_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity-draft"
                ],
                "summary": "Get entity draft",
                "parameters": [
                    {
                        "type": "string",
                        "description": "entity_draft_id",
                        "name": "entity_draft_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity_service.EntityDraft"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for updating entity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity-draft"
                ],
                "summary": "Update entity draft",
                "parameters": [
                    {
                        "type": "string",
                        "description": "entity_draft_id",
                        "name": "entity_draft_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "entity-draft",
                        "name": "entity-draft",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_entity_service.EntityDraftSwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "API for deleting entity draft",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity-draft"
                ],
                "summary": "Delete entity draft",
                "parameters": [
                    {
                        "type": "string",
                        "description": "entity_draft_id",
                        "name": "entity_draft_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for updating entity draft comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity-draft"
                ],
                "summary": "Update entity draft comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "entity_draft_id",
                        "name": "entity_draft_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "entity-draft",
                        "name": "entity-draft",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_entity_service.ConfirmEntityDraftSwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.EmptyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/entity-excel-report": {
            "get": {
                "description": "API for getting excel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "report"
                ],
                "summary": "Getting excel",
                "parameters": [
                    {
                        "type": "string",
                        "description": "from_date",
                        "name": "from_date",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "to_date",
                        "name": "to_date",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/entity-expired": {
            "get": {
                "description": "API for getting expired entity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity"
                ],
                "summary": "get expired entity",
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/entity-parent-status": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for updating entity with parent statuss",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity"
                ],
                "summary": "Update entity with parent status",
                "parameters": [
                    {
                        "description": "entity",
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_entity_service.UpdateEntityStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.EmptyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/entity-properties": {
            "get": {
                "description": "API for getting all entity with properties",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity"
                ],
                "summary": "Getting All entity ` + "`" + `with` + "`" + ` properties",
                "parameters": [
                    {
                        "type": "string",
                        "description": "city_id",
                        "name": "city_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "region_id",
                        "name": "region_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "entity_type_code",
                        "name": "entity_type_code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "entity_number",
                        "name": "entity_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "status_id",
                        "name": "status_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity_service.GetAllEntitiesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/entity-staff/{staff_id}": {
            "get": {
                "description": "API for getting all entities by staff id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity"
                ],
                "summary": "Getting All entities by staff id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "staff_id",
                        "name": "staff_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity_service.GetAllEntitiesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/entity-status-count": {
            "get": {
                "description": "API for getting expired entity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity-status-count"
                ],
                "summary": "get expired entity",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_entity_service.GetAllEntityStatusCount"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/entity-status-revert/{entity_id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for updating entity statuss",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity"
                ],
                "summary": "Update entity status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "entity_id",
                        "name": "entity_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "entity",
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_entity_service.RevertEntityStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.EmptyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/entity-status-update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for updating entity status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity"
                ],
                "summary": "Update entity status",
                "parameters": [
                    {
                        "description": "entity",
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_entity_service.UpdateEntityStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.EmptyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/entity-status/{entity_id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for action-description \u003c- action.description, status_id \u003c- action.next_status_id and deadline \u003c- action.deadline",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity"
                ],
                "summary": "Update entity status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "entity_id",
                        "name": "entity_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "entity",
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_entity_service.UpdateWithActionIDEntitySwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.EmptyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/entity-type-count": {
            "get": {
                "description": "API for getting expired entity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity-type-count"
                ],
                "summary": "get expired entity",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_entity_service.GetEntityTypeCod"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/entity/{entity_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity"
                ],
                "summary": "Get entity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "entity_id",
                        "name": "entity_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity_service.GetEntity"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for updating entity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity"
                ],
                "summary": "Update entity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "entity_id",
                        "name": "entity_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "entity",
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_entity_service.CreateUpdateEntitySwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "API for deleting entity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "entity"
                ],
                "summary": "Delete entity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "entity_id",
                        "name": "entity_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/file-upload": {
            "post": {
                "description": "API for creating file",
                "consumes": [
                    "multipart/form-data",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file_upload"
                ],
                "summary": "Create file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "description": "region",
                        "name": "region",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_entity_service.EntityFilesSwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.FilesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/finish": {
            "post": {
                "description": "API for creating finish",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "finish"
                ],
                "summary": "Create finish",
                "parameters": [
                    {
                        "description": "finish",
                        "name": "finish",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.CreateUpdateFinishSwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/finish-action": {
            "patch": {
                "description": "API is to create finish action  relation action-\u003e ACTION_SENDS_FINISH -\u003e action",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "finish"
                ],
                "summary": "Create finish action  relation action-\u003e ACTION_SENDS_FINISH -\u003e action",
                "parameters": [
                    {
                        "description": "finish",
                        "name": "action",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.CreateFinishActionRelationRequestSwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/finish/{finish_id}": {
            "put": {
                "description": "API for updating finish",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "finish"
                ],
                "summary": "Update Finish",
                "parameters": [
                    {
                        "type": "string",
                        "description": "finish_id",
                        "name": "finish_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "finish",
                        "name": "finish",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.CreateUpdateFinishSwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.EmptyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/geo-service": {
            "post": {
                "description": "API to geo-service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "geo-service"
                ],
                "summary": "geo-service",
                "parameters": [
                    {
                        "description": "Geo service",
                        "name": "geo-service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_geo_service.GeoServiceRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_geo_service.GeoServiceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/gis": {
            "get": {
                "description": "API for get GIS data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "gis"
                ],
                "summary": "get GIS data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_setting_service.GisData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/global-action-types": {
            "get": {
                "description": "API for getting global action types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "global_types"
                ],
                "summary": "Getting All global action types",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.GlobalActionTypes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API for Creating global action",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "global_types"
                ],
                "summary": "Creating All global action",
                "parameters": [
                    {
                        "description": "Action",
                        "name": "Action",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_setting_service.CreateGlobalActionSwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.GlobalTypesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/global-action-types/{id}": {
            "put": {
                "description": "API for Creating global action types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "global_types"
                ],
                "summary": "Creating All global action types",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "action",
                        "name": "action",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_setting_service.CreateGlobalActionSwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.GlobalTypesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/global-entity-types": {
            "get": {
                "description": "API for getting global types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "global_types"
                ],
                "summary": "Getting All global types",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.GlobalTypesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API for Creating global types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "global_types"
                ],
                "summary": "Creating All global types",
                "parameters": [
                    {
                        "description": "entity",
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_setting_service.CreateGlobalEntityTypeSwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.GlobalTypesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/global-entity-types/{id}": {
            "put": {
                "description": "API for Creating global types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "global_types"
                ],
                "summary": "Creating All global types",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "City",
                        "name": "city",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_setting_service.CreateGlobalEntityTypeSwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.GlobalTypesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/global-setting": {
            "get": {
                "description": "API for getting global setting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "global setting"
                ],
                "summary": "Get GlobalSetting",
                "parameters": [
                    {
                        "type": "string",
                        "description": "type",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/setting_service.GlobalSetting"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "API for updating setting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "global setting"
                ],
                "summary": "Update setting",
                "parameters": [
                    {
                        "type": "string",
                        "description": "type",
                        "name": "type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "setting",
                        "name": "setting",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/setting_service.GlobalSetting"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/setting_service.CreatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/group-property": {
            "get": {
                "description": "API for getting all group properties",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group_property"
                ],
                "summary": "Getting All Group Properties",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity_service.GetAllGroupPropertiesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API for creating group_property",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group_property"
                ],
                "summary": "Create group_property",
                "parameters": [
                    {
                        "description": "group property",
                        "name": "group_property",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_entity_service.GroupPropertySwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/group-property-status/{status_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group_property"
                ],
                "summary": "Get group property",
                "parameters": [
                    {
                        "type": "string",
                        "description": "status_id",
                        "name": "status_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity_service.GetAllGroupPropertyByStatusIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/group-property-type": {
            "get": {
                "description": "API for getting all group properties by type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group_property"
                ],
                "summary": "Getting All Group Properties By Type",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "step",
                        "name": "step",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "type",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity_service.GetAllGroupPropertiesByTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/group-property/{group_property_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group_property"
                ],
                "summary": "Get group property",
                "parameters": [
                    {
                        "type": "string",
                        "description": "group_property_id",
                        "name": "group_property_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity_service.GroupProperty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "API for updating group property",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "group_property"
                ],
                "summary": "Update Group Property",
                "parameters": [
                    {
                        "type": "string",
                        "description": "group_property_id",
                        "name": "group_property_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "group property",
                        "name": "property",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_entity_service.GroupPropertySwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/image-upload": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "file_upload"
                ],
                "parameters": [
                    {
                        "type": "file",
                        "description": "image",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.FilesResponse"
                        }
                    }
                }
            }
        },
        "/v1/login": {
            "post": {
                "description": "API to singin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "login",
                "parameters": [
                    {
                        "description": "Login",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_user_service.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_user_service.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/login-exists": {
            "post": {
                "description": "API to singin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "login",
                "parameters": [
                    {
                        "description": "Login",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_user_service.LoginExistsRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_user_service.LoginExistsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/login-refresh": {
            "post": {
                "description": "API to get your access token with refresh",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "if access-token expired, get your access token with refresh",
                "parameters": [
                    {
                        "type": "string",
                        "description": "refresh_token",
                        "name": "refresh_token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "is_applicant",
                        "name": "is_applicant",
                        "in": "query"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_user_service.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/news": {
            "get": {
                "description": "API for Get all news",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "news"
                ],
                "summary": "Get All News",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "active",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "inactive",
                        "name": "inactive",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_content_service.NewsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API for creating news",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "news"
                ],
                "summary": "Create news",
                "parameters": [
                    {
                        "description": "news",
                        "name": "news",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_content_service.NewCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/content_service.NewResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/news/{slug}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "news"
                ],
                "summary": "Get News",
                "parameters": [
                    {
                        "type": "string",
                        "description": "slug",
                        "name": "slug",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "news_id",
                        "name": "news_id",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/content_service.NewResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "API for updating news",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "news"
                ],
                "summary": "Update News",
                "parameters": [
                    {
                        "type": "string",
                        "description": "slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "news",
                        "name": "news",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_content_service.NewCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/content_service.NewResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "API for deleting news",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "news"
                ],
                "summary": "Delete News",
                "parameters": [
                    {
                        "type": "string",
                        "description": "slug",
                        "name": "slug",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/content_service.Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/normative": {
            "get": {
                "description": "API for Get all normative",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "normative"
                ],
                "summary": "Get All Normative",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "active",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "inactive",
                        "name": "inactive",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_content_service.ListNormativeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API for creating normative",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "normative"
                ],
                "summary": "Create normative",
                "parameters": [
                    {
                        "description": "normative",
                        "name": "normative",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_content_service.CreateNormative"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/content_service.NormativeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/normative/{slug}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "normative"
                ],
                "summary": "Get Normative",
                "parameters": [
                    {
                        "type": "string",
                        "description": "slug",
                        "name": "slug",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "normative_id",
                        "name": "normative_id",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/content_service.Normative"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "API for updating normative",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "normative"
                ],
                "summary": "Update Normative",
                "parameters": [
                    {
                        "type": "string",
                        "description": "slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "news",
                        "name": "news",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_content_service.CreateNormative"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/content_service.Normative"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "API for deleting normative",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "normative"
                ],
                "summary": "Delete Normative",
                "parameters": [
                    {
                        "type": "string",
                        "description": "slug",
                        "name": "slug",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/content_service.Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/organization": {
            "get": {
                "description": "API for getting all organizations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Getting All Organizations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_service.GetAllOrganizationsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API for creating organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Create Organization",
                "parameters": [
                    {
                        "description": "organization",
                        "name": "organization",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_user_service.CreateUpdateOrganizationSwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/organization-branches/{organization_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Get Organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "organization_id",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_service.Organization"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/organization/{organization_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Get Organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "organization_id",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_service.Organization"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "API for updating organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "Update Organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "organization_id",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "organization",
                        "name": "organization",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_user_service.CreateUpdateOrganizationSwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/page": {
            "get": {
                "description": "API for Get all news",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "page"
                ],
                "summary": "Get All News",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "active",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "inactive",
                        "name": "inactive",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_content_service.NewsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API for creating page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "page"
                ],
                "summary": "Create Page",
                "parameters": [
                    {
                        "description": "page",
                        "name": "page",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_content_service.CreatePage"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/content_service.PageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/page/{slug}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "page"
                ],
                "summary": "Get Page By Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "page_id",
                        "name": "page_id",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "slug",
                        "name": "slug",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "lang",
                        "name": "lang",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_content_service.PageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "API for updating page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "page"
                ],
                "summary": "Update News",
                "parameters": [
                    {
                        "type": "string",
                        "description": "slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "page",
                        "name": "page",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_content_service.CreatePage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/content_service.PageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "API for deleting Page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "page"
                ],
                "summary": "Delete Page",
                "parameters": [
                    {
                        "type": "string",
                        "description": "slug",
                        "name": "slug",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/content_service.Empty"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/parallel-head": {
            "post": {
                "description": "API for creating parallel",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parallel"
                ],
                "summary": "Create parallel",
                "parameters": [
                    {
                        "description": "Parallel",
                        "name": "parallel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.CreateUpdateParallelHeadSwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/parallel-head-step": {
            "patch": {
                "description": "API Create relation parallel-head has many position",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parallel"
                ],
                "summary": "Create relation parallel-head has many position",
                "parameters": [
                    {
                        "description": "parallel",
                        "name": "parallel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/discussion_logic_service.CreateRelationHeadHasManyStepsRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/parallel-head/{parallel_head_id}": {
            "patch": {
                "description": "API for updating parallel head position",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parallel"
                ],
                "summary": "Update parallel head position",
                "parameters": [
                    {
                        "type": "string",
                        "description": "parallel_head_id",
                        "name": "parallel_head_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Parallel",
                        "name": "parallel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.UpdateHeadTailParallelSwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/parallel-tail": {
            "post": {
                "description": "API for creating parallel tail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parallel"
                ],
                "summary": "Create parallel tail",
                "parameters": [
                    {
                        "description": "Parallel",
                        "name": "parallel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.CreateUpdateParallelTailSwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/parallel-tail-step": {
            "patch": {
                "description": "API Create relation parallel-tail sends to the position",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parallel"
                ],
                "summary": "Create relation parallel-tail sends to the position",
                "parameters": [
                    {
                        "description": "parallel",
                        "name": "parallel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/discussion_logic_service.CreateRelationTailSendsStepRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/parallel-tail/{parallel_tail_id}": {
            "patch": {
                "description": "API for updating parallel head position",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parallel"
                ],
                "summary": "Update parallel head position",
                "parameters": [
                    {
                        "description": "Parallel",
                        "name": "parallel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.UpdateHeadTailParallelSwag"
                        }
                    },
                    {
                        "type": "string",
                        "description": "parallel_tail_id",
                        "name": "parallel_tail_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/parallel/{parallel_id}": {
            "get": {
                "description": "API for getting parallel by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parallel"
                ],
                "summary": "Getting parallel by id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/discussion_logic_service.Parallel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/permission": {
            "get": {
                "description": "API for getting all rolees",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permission"
                ],
                "summary": "Getting All permissions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_service.GetAllRolesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API for creating permission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permission"
                ],
                "summary": "Create permission",
                "parameters": [
                    {
                        "description": "permission",
                        "name": "permission",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_user_service.CreateUpdatePermissionSwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/permission/{permission_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permission"
                ],
                "summary": "Get Permission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "permission_id",
                        "name": "permission_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_service.Permission"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "API for updating permission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "permission"
                ],
                "summary": "Update permission",
                "parameters": [
                    {
                        "type": "string",
                        "description": "permission_id",
                        "name": "permission_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "permission",
                        "name": "permission",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_user_service.CreateUpdatePermissionSwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/product": {
            "get": {
                "description": "API for getting all productes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Getting All products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "category_id",
                        "name": "category_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "owner_id",
                        "name": "owner_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/setting_service.GetAllProductsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API for creating product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Create product",
                "parameters": [
                    {
                        "description": "Product",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_setting_service.CreateUpdateProductSwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/setting_service.CreatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/product/{product_id}": {
            "get": {
                "description": "API for getting product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Get Product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product_id",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/setting_service.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "API for updating product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Update product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product_id",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "product",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_setting_service.CreateUpdateProductSwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/setting_service.CreatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "API for deleting product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Delete product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product_id",
                        "name": "product_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/property": {
            "get": {
                "description": "API for getting all properties",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "property"
                ],
                "summary": "Getting All Properties",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity_service.GetAllPropertiesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API for creating property",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "property"
                ],
                "summary": "Create property",
                "parameters": [
                    {
                        "description": "property",
                        "name": "property",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_entity_service.PropertySwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/property/{property_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "property"
                ],
                "summary": "Get Property",
                "parameters": [
                    {
                        "type": "string",
                        "description": "property_id",
                        "name": "property_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity_service.Property"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "API for updating property",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "property"
                ],
                "summary": "Update Property",
                "parameters": [
                    {
                        "type": "string",
                        "description": "property_id",
                        "name": "property_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "property",
                        "name": "property",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_entity_service.PropertySwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "API for deleting property",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "property"
                ],
                "summary": "Delete Property",
                "parameters": [
                    {
                        "type": "string",
                        "description": "property_id",
                        "name": "property_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/region": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for getting all regiones",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "region"
                ],
                "summary": "Getting All regions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "soato",
                        "name": "soato",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/setting_service.GetAllRegionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API for creating region",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "region"
                ],
                "summary": "Create region",
                "parameters": [
                    {
                        "description": "region",
                        "name": "region",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_setting_service.CreateUpdateRegionSwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/setting_service.CreatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/region/main-file/{file_id}": {
            "get": {
                "description": "API for getting main file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "region"
                ],
                "summary": "Get region main file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "region_id",
                        "name": "region_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file_id",
                        "name": "file_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.FilesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/region/region-file": {
            "post": {
                "description": "API for creating region",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "region"
                ],
                "summary": "Create region",
                "parameters": [
                    {
                        "description": "region",
                        "name": "region",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_setting_service.RegionFilesSwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/setting_service.CreatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/region/{region_id}": {
            "get": {
                "description": "API for getting region",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "region"
                ],
                "summary": "Get region",
                "parameters": [
                    {
                        "type": "string",
                        "description": "region_id",
                        "name": "region_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "API for updating region",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "region"
                ],
                "summary": "Update region",
                "parameters": [
                    {
                        "type": "string",
                        "description": "region_id",
                        "name": "region_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "region",
                        "name": "region",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_setting_service.CreateUpdateRegionSwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/setting_service.CreatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/region/{region_id}/main-file": {
            "get": {
                "description": "API for getting main file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "region"
                ],
                "summary": "Get region main file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "region_id",
                        "name": "region_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.FilesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/region/{region_id}/main-file/list": {
            "get": {
                "description": "API for getting main file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "region"
                ],
                "summary": "Get region main file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "region_id",
                        "name": "region_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_setting_service.GetAllRegionFilesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/region/{region_id}/upload": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "file_upload"
                ],
                "parameters": [
                    {
                        "type": "file",
                        "description": "file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "region_id",
                        "name": "region_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_setting_service.RegionFilesSwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.FilesResponse"
                        }
                    }
                }
            }
        },
        "/v1/regions/{city_id}": {
            "get": {
                "description": "API for getting all regiones by city ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "region"
                ],
                "summary": "Getting All regions by city ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "city_id",
                        "name": "city_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/setting_service.GetAllRegionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/role": {
            "get": {
                "description": "API for getting all rolees",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "Getting All roles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "organization_id",
                        "name": "organization_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_service.GetAllRolesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API for creating role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "Create role",
                "parameters": [
                    {
                        "description": "role",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_user_service.CreateUpdateRoleSwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/role/code": {
            "get": {
                "description": "API for getting all rolees by code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "Getting All roles by code",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "code",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "organization_id",
                        "name": "organization_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_service.GetAllRolesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/role/{role_id}": {
            "get": {
                "description": "API for getting role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "Get role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "role_id",
                        "name": "role_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_service.Role"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "API for updating role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "Update role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "role_id",
                        "name": "role_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "role",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_user_service.CreateUpdateRoleSwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "API for deleting role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "Delete Role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "role_id",
                        "name": "role_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/staff": {
            "get": {
                "description": "API for getting all staff",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "Getting All Staffs",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "organization_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "phone_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "role_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search_string",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "soato",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_service.GetAllStaffsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API for creating staff",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "staff",
                "parameters": [
                    {
                        "description": "Staff",
                        "name": "staff",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_user_service.CreateUpdateStaffSwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/user_service.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/staff-by-token": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for getting staff",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "Get Staff by token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_service.Staff"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/staff/{staff_id}": {
            "get": {
                "description": "API for getting staff",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "Get Staff",
                "parameters": [
                    {
                        "type": "string",
                        "description": "staff_id",
                        "name": "staff_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_service.Staff"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "API for updating staff",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "Update Staff",
                "parameters": [
                    {
                        "type": "string",
                        "description": "staff_id",
                        "name": "staff_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "staff",
                        "name": "staff",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_user_service.CreateUpdateStaffSwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user_service.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/status": {
            "get": {
                "description": "API for getting all statuses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "status"
                ],
                "summary": "Getting All Statuses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "parent_status_id",
                        "name": "parent_status_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "type_code",
                        "name": "type_code",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity_service.GetAllStatusesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API for creating status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "status"
                ],
                "summary": "Create Status",
                "parameters": [
                    {
                        "description": "status",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_entity_service.StatusSwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/status/{status_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "status"
                ],
                "summary": "Get Status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "status_id",
                        "name": "status_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_entity_service.Status"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "API for updating status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "status"
                ],
                "summary": "Update Status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "status_id",
                        "name": "status_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "status",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_entity_service.StatusSwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "API for deleting status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "status"
                ],
                "summary": "Delete Status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "status_id",
                        "name": "status_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/step": {
            "post": {
                "description": "API for creating step",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "step"
                ],
                "summary": "Create step",
                "parameters": [
                    {
                        "description": "step",
                        "name": "step",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.CreateUpdateStepSwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/step-actions/{step_id}": {
            "put": {
                "description": "API for updating step actions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "step"
                ],
                "summary": "Update step actions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "step_id",
                        "name": "step_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.EmptyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/step-previous": {
            "patch": {
                "description": "API for getting previous status for entity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "step"
                ],
                "summary": "Get by previous status for entity",
                "parameters": [
                    {
                        "description": "step",
                        "name": "step",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.GetPrevStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.EmptyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/step-role": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API for getting by role id method",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "step"
                ],
                "summary": "Get by role id method",
                "parameters": [
                    {
                        "description": "query",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.GetStepByRoleIDSwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.GetStepByRoleIDResponseSwag"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/step/{step_id}": {
            "get": {
                "description": "API for getting step",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "step"
                ],
                "summary": "Get step",
                "parameters": [
                    {
                        "type": "string",
                        "description": "step_id",
                        "name": "step_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.GetOneStep"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "API for updating step",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "step"
                ],
                "summary": "Update step",
                "parameters": [
                    {
                        "type": "string",
                        "description": "step_id",
                        "name": "step_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "step",
                        "name": "step",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.CreateUpdateStepSwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "API for deleting step",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "step"
                ],
                "summary": "Delete Step",
                "parameters": [
                    {
                        "type": "string",
                        "description": "step_id",
                        "name": "step_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "API for updating step position",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "step"
                ],
                "summary": "Update step position",
                "parameters": [
                    {
                        "type": "string",
                        "description": "step_id",
                        "name": "step_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "step",
                        "name": "step",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_discussion_logic_service.UpdateStepPositionSwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.EmptyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/tax/{district_id}": {
            "patch": {
                "description": "API for updating district tax and cost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "district"
                ],
                "summary": "Update district tax",
                "parameters": [
                    {
                        "type": "string",
                        "description": "district_id",
                        "name": "district_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "tax",
                        "name": "tax",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_setting_service.UpdateDistrictTaxSwag"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/update-password": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API to update user password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "update user password",
                "parameters": [
                    {
                        "description": "Update password",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_user_service.UpdatePassword"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.EmptyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/update-password/{user_id}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "API to update user password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "update user password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update password",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_user_service.UpdatePassword"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.EmptyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/user": {
            "get": {
                "description": "API for getting all useres",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Getting All users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/setting_service.GetAllUsersResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "API for creating user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_setting_service.CreateUpdateUserSwag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/setting_service.CreatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/user-exists": {
            "post": {
                "description": "API for getting user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "login",
                        "name": "login",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "password",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/setting_service.UserExistsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        },
        "/v1/user/{user_id}": {
            "get": {
                "description": "API for getting user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/setting_service.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "API for updating user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ek_setting_service.CreateUpdateUserSwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/setting_service.CreatedResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/ek_variables.FailureResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "content_service.Empty": {
            "type": "object"
        },
        "content_service.NewResponse": {
            "type": "object",
            "properties": {
                "new": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/content_service.News"
                    }
                }
            }
        },
        "content_service.News": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "formatted_date": {
                    "type": "string"
                },
                "full_text": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "lang": {
                    "type": "string"
                },
                "meta": {
                    "type": "object",
                    "$ref": "#/definitions/content_service.News_Meta"
                },
                "preview_image": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "content_service.News_Meta": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "tags": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "content_service.Normative": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lang": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "url_link": {
                    "type": "string"
                }
            }
        },
        "content_service.NormativeResponse": {
            "type": "object",
            "properties": {
                "normative": {
                    "type": "object",
                    "$ref": "#/definitions/content_service.Normative"
                }
            }
        },
        "content_service.Page": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "lang": {
                    "type": "string"
                },
                "meta": {
                    "type": "object",
                    "$ref": "#/definitions/content_service.Page_Meta"
                },
                "preview_image": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "content_service.PageResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/content_service.Page"
                    }
                }
            }
        },
        "content_service.Page_Meta": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "tags": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "discussion_logic_service.CreateRelationHeadHasManyStepsRequest": {
            "type": "object",
            "properties": {
                "head_id": {
                    "type": "string"
                },
                "step_id": {
                    "type": "string"
                }
            }
        },
        "discussion_logic_service.CreateRelationTailSendsStepRequest": {
            "type": "object",
            "properties": {
                "step_id": {
                    "type": "string"
                },
                "tail_id": {
                    "type": "string"
                }
            }
        },
        "discussion_logic_service.Parallel": {
            "type": "object",
            "properties": {
                "diagram_id": {
                    "type": "string"
                },
                "head_id": {
                    "type": "string"
                },
                "position": {
                    "type": "object",
                    "$ref": "#/definitions/discussion_logic_service.Position"
                },
                "tail": {
                    "type": "object",
                    "$ref": "#/definitions/discussion_logic_service.Tail"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "discussion_logic_service.Position": {
            "type": "object",
            "properties": {
                "x": {
                    "type": "integer"
                },
                "y": {
                    "type": "integer"
                }
            }
        },
        "discussion_logic_service.Tail": {
            "type": "object",
            "properties": {
                "diagram_id": {
                    "type": "string"
                },
                "position": {
                    "type": "object",
                    "$ref": "#/definitions/discussion_logic_service.Position"
                },
                "tail_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "ek_content_service.CreateNormative": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "lang": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "url_link": {
                    "type": "string"
                }
            }
        },
        "ek_content_service.CreatePage": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "content": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "lang": {
                    "type": "string"
                },
                "meta": {
                    "type": "object",
                    "$ref": "#/definitions/ek_content_service.Meta"
                },
                "preview_image": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "ek_content_service.ListNormativeResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "string",
                    "example": "0"
                },
                "normative": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ek_content_service.NormativeSlim"
                    }
                }
            }
        },
        "ek_content_service.Meta": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "tags": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "ek_content_service.NewCreate": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "full_text": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "lang": {
                    "type": "string"
                },
                "meta": {
                    "type": "object",
                    "$ref": "#/definitions/ek_content_service.Meta"
                },
                "preview_image": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "ek_content_service.NewsResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "string",
                    "example": "0"
                },
                "news": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ek_content_service.NewsSlim"
                    }
                }
            }
        },
        "ek_content_service.NewsSlim": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "formated_date": {
                    "type": "string"
                },
                "full_text": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lang": {
                    "type": "string"
                },
                "preview_image": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "ek_content_service.NormativeSlim": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lang": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "url_link": {
                    "type": "string"
                }
            }
        },
        "ek_content_service.Page": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "lang": {
                    "type": "string"
                },
                "meta": {
                    "type": "object",
                    "$ref": "#/definitions/ek_content_service.Meta"
                },
                "preview_image": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "ek_content_service.PageResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ek_content_service.Page"
                    }
                }
            }
        },
        "ek_discussion_logic_service.ActionSendsStepRelationResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "ek_discussion_logic_service.BusinessType": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "diagram": {
                    "type": "object",
                    "$ref": "#/definitions/ek_discussion_logic_service.Diagram"
                },
                "diagram_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "ek_discussion_logic_service.CreateAction": {
            "type": "object",
            "required": [
                "description",
                "name",
                "next_status_id",
                "order",
                "step_id",
                "type"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "next_status_id": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "step_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "ek_discussion_logic_service.CreateDiagramStepRelationRequestSwag": {
            "type": "object",
            "properties": {
                "diagram_id": {
                    "type": "string"
                },
                "step_id": {
                    "type": "string"
                }
            }
        },
        "ek_discussion_logic_service.CreateFinishActionRelationRequestSwag": {
            "type": "object",
            "required": [
                "action_id",
                "finish_id"
            ],
            "properties": {
                "action_id": {
                    "type": "string"
                },
                "finish_id": {
                    "type": "string"
                }
            }
        },
        "ek_discussion_logic_service.CreateUpdateBusinessTypeSwag": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "diagram_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ek_discussion_logic_service.CreateUpdateDiagramSwag": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "position_x": {
                    "type": "integer"
                },
                "position_y": {
                    "type": "integer"
                },
                "type_code": {
                    "type": "integer"
                }
            }
        },
        "ek_discussion_logic_service.CreateUpdateFinishSwag": {
            "type": "object",
            "required": [
                "diagram_id",
                "position",
                "type"
            ],
            "properties": {
                "diagram_id": {
                    "type": "string"
                },
                "position": {
                    "type": "object",
                    "$ref": "#/definitions/ek_discussion_logic_service.Position"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "ek_discussion_logic_service.CreateUpdateParallelHeadSwag": {
            "type": "object",
            "properties": {
                "diagram_id": {
                    "type": "string"
                },
                "position_head_x": {
                    "type": "integer"
                },
                "position_head_y": {
                    "type": "integer"
                }
            }
        },
        "ek_discussion_logic_service.CreateUpdateParallelTailSwag": {
            "type": "object",
            "properties": {
                "diagram_id": {
                    "type": "string"
                },
                "head_id": {
                    "type": "string"
                },
                "position_tail_x": {
                    "type": "integer"
                },
                "position_tail_y": {
                    "type": "integer"
                }
            }
        },
        "ek_discussion_logic_service.CreateUpdateStepSwag": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ek_discussion_logic_service.CreateAction"
                    }
                },
                "deadline": {
                    "type": "integer"
                },
                "default_action_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "diagram_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "organization_name": {
                    "type": "string"
                },
                "position_x": {
                    "type": "integer"
                },
                "position_y": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "string"
                },
                "role_name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "ek_discussion_logic_service.Diagram": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "position": {
                    "type": "object",
                    "$ref": "#/definitions/ek_discussion_logic_service.Position"
                },
                "type_code": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "ek_discussion_logic_service.GetAllBusinessTypesResponse": {
            "type": "object",
            "properties": {
                "business_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ek_discussion_logic_service.BusinessType"
                    }
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "ek_discussion_logic_service.GetAllDiagramsResponse": {
            "type": "object",
            "properties": {
                "business_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ek_discussion_logic_service.Diagram"
                    }
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "ek_discussion_logic_service.GetOneStep": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "integer"
                },
                "deadline": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "diagram_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "organization_name": {
                    "type": "string"
                },
                "position_x": {
                    "type": "integer"
                },
                "position_y": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "string"
                },
                "role_name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        },
        "ek_discussion_logic_service.GetPrevStatus": {
            "type": "object",
            "required": [
                "code",
                "entity_id",
                "status_id"
            ],
            "properties": {
                "code": {
                    "type": "integer"
                },
                "entity_id": {
                    "type": "string"
                },
                "status_id": {
                    "type": "string"
                }
            }
        },
        "ek_discussion_logic_service.GetStepByRoleIDResponseSwag": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ek_discussion_logic_service.RoleActionsSwag"
                    }
                }
            }
        },
        "ek_discussion_logic_service.GetStepByRoleIDSwag": {
            "type": "object",
            "required": [
                "code",
                "status_id"
            ],
            "properties": {
                "code": {
                    "type": "integer"
                },
                "organizations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "status_id": {
                    "type": "string"
                }
            }
        },
        "ek_discussion_logic_service.ParallelOrganizationSwag": {
            "type": "object",
            "properties": {
                "organization_id": {
                    "type": "string"
                },
                "organization_name": {
                    "type": "string"
                }
            }
        },
        "ek_discussion_logic_service.Position": {
            "type": "object",
            "properties": {
                "x": {
                    "type": "integer"
                },
                "y": {
                    "type": "integer"
                }
            }
        },
        "ek_discussion_logic_service.RoleActionsSwag": {
            "type": "object",
            "properties": {
                "deadline": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "next_status_id": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "organizations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ek_discussion_logic_service.ParallelOrganizationSwag"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "ek_discussion_logic_service.UpdateAction": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "next_status_id": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "ek_discussion_logic_service.UpdateActionSendsParallelRequestSwag": {
            "type": "object",
            "required": [
                "action_id"
            ],
            "properties": {
                "action_id": {
                    "type": "string"
                },
                "parallel_head_id": {
                    "type": "string"
                },
                "parallel_tail_id": {
                    "type": "string"
                }
            }
        },
        "ek_discussion_logic_service.UpdateActionSendsStepRequestSwag": {
            "type": "object",
            "required": [
                "action_id",
                "step_id"
            ],
            "properties": {
                "action_id": {
                    "type": "string"
                },
                "step_id": {
                    "type": "string"
                }
            }
        },
        "ek_discussion_logic_service.UpdateHeadTailParallelSwag": {
            "type": "object",
            "properties": {
                "position_x": {
                    "type": "integer"
                },
                "position_y": {
                    "type": "integer"
                }
            }
        },
        "ek_discussion_logic_service.UpdateMultipleActionsSwag": {
            "type": "object",
            "required": [
                "actions"
            ],
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ek_discussion_logic_service.UpdateAction"
                    }
                }
            }
        },
        "ek_discussion_logic_service.UpdateStepPositionSwag": {
            "type": "object",
            "required": [
                "x",
                "y"
            ],
            "properties": {
                "x": {
                    "type": "integer"
                },
                "y": {
                    "type": "integer"
                }
            }
        },
        "ek_entity_service.City": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ru_name": {
                    "type": "string"
                },
                "soato": {
                    "type": "integer"
                }
            }
        },
        "ek_entity_service.ConfirmEntityDraftSwag": {
            "type": "object",
            "required": [
                "comment",
                "entity_id",
                "status_id"
            ],
            "properties": {
                "comment": {
                    "type": "string"
                },
                "entity_id": {
                    "type": "string"
                },
                "status_id": {
                    "type": "string"
                }
            }
        },
        "ek_entity_service.CreateUpdateEntitySwag": {
            "type": "object",
            "required": [
                "address",
                "city",
                "district",
                "entity_files",
                "entity_gallery",
                "entity_properties",
                "entity_type_code",
                "region"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "object",
                    "$ref": "#/definitions/ek_entity_service.City"
                },
                "district": {
                    "type": "object",
                    "$ref": "#/definitions/ek_entity_service.District"
                },
                "entity_files": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "entity_gallery": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "entity_properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ek_entity_service.EntityProperty"
                    }
                },
                "entity_type_code": {
                    "description": "KadastrNumber    string            ` + "`" + `json:\"kadastr_number\" binding:\"required\"  example:\"123456781234\"` + "`" + `",
                    "type": "integer",
                    "example": 1
                },
                "region": {
                    "type": "object",
                    "$ref": "#/definitions/ek_entity_service.Region"
                }
            }
        },
        "ek_entity_service.District": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ru_name": {
                    "type": "string"
                },
                "soato": {
                    "type": "integer"
                }
            }
        },
        "ek_entity_service.EntityDraftSwag": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "object",
                    "$ref": "#/definitions/ek_entity_service.City"
                },
                "comment": {
                    "type": "string"
                },
                "district": {
                    "type": "object",
                    "$ref": "#/definitions/ek_entity_service.District"
                },
                "entity_gallery": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "entity_id": {
                    "type": "string"
                },
                "entity_properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ek_entity_service.EntityProperty"
                    }
                },
                "region": {
                    "type": "object",
                    "$ref": "#/definitions/ek_entity_service.Region"
                }
            }
        },
        "ek_entity_service.EntityFilesSwag": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                }
            }
        },
        "ek_entity_service.EntityProperty": {
            "type": "object",
            "properties": {
                "property_id": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "ek_entity_service.EntityTypeCode": {
            "type": "object",
            "properties": {
                "type_count": {
                    "type": "integer"
                },
                "type_name": {
                    "type": "string"
                }
            }
        },
        "ek_entity_service.Entss": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "status_count": {
                    "type": "integer"
                },
                "status_name": {
                    "type": "string"
                }
            }
        },
        "ek_entity_service.GetAllEntitiesRequestSwag": {
            "type": "object",
            "properties": {
                "city_id": {
                    "type": "string"
                },
                "entity_number": {
                    "type": "string"
                },
                "entity_soato": {
                    "type": "string"
                },
                "entity_type_code": {
                    "type": "integer"
                },
                "from_date": {
                    "type": "string",
                    "example": "2021-11-21"
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "region_id": {
                    "type": "string"
                },
                "staff_id": {
                    "type": "string"
                },
                "staff_soato": {
                    "type": "string"
                },
                "status_id": {
                    "type": "string"
                },
                "to_date": {
                    "type": "string",
                    "example": "2021-11-21"
                }
            }
        },
        "ek_entity_service.GetAllEntityDraftsRequestsSwag": {
            "type": "object",
            "properties": {
                "city_id": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "entity_draft_number": {
                    "type": "string"
                },
                "from_date": {
                    "type": "string",
                    "example": "2021-11-21"
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "region_id": {
                    "type": "string"
                },
                "status_id": {
                    "type": "string"
                },
                "to_date": {
                    "type": "string",
                    "example": "2021-11-21"
                }
            }
        },
        "ek_entity_service.GetAllEntityStatusCount": {
            "type": "object",
            "properties": {
                "get_all_entity_status": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ek_entity_service.Entss"
                    }
                }
            }
        },
        "ek_entity_service.GetEntityCountResponse": {
            "type": "object",
            "properties": {
                "auction_count": {
                    "type": "integer"
                },
                "discussion_count": {
                    "type": "integer"
                },
                "free_count": {
                    "type": "integer"
                },
                "sold_count": {
                    "type": "integer"
                }
            }
        },
        "ek_entity_service.GetEntityTypeCod": {
            "type": "object",
            "properties": {
                "get_type_code": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ek_entity_service.EntityTypeCode"
                    }
                }
            }
        },
        "ek_entity_service.GetProperties": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "integer"
                },
                "property_id": {
                    "type": "string"
                }
            }
        },
        "ek_entity_service.GroupPropertySwag": {
            "type": "object",
            "required": [
                "description",
                "name",
                "properties",
                "read_statuses",
                "status",
                "step",
                "type",
                "write_statuses"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "I have no idea"
                },
                "name": {
                    "type": "string"
                },
                "organization": {
                    "type": "object",
                    "$ref": "#/definitions/ek_entity_service.OrganizationGet"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ek_entity_service.GetProperties"
                    }
                },
                "read_statuses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "60dd9c0a4472a2aaa970304e"
                    ]
                },
                "status": {
                    "type": "boolean"
                },
                "step": {
                    "type": "integer"
                },
                "type": {
                    "type": "integer"
                },
                "write_statuses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "60dd9c1a729317449b1ada03"
                    ]
                }
            }
        },
        "ek_entity_service.OrganizationGet": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ek_entity_service.PropertyOption": {
            "type": "object",
            "required": [
                "name",
                "value"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Option"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "ek_entity_service.PropertySwag": {
            "type": "object",
            "required": [
                "description",
                "is_required",
                "label",
                "name",
                "placeholder",
                "property_options",
                "status",
                "type",
                "validation",
                "with_confirmation"
            ],
            "properties": {
                "collection_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "example": "This is description for property"
                },
                "is_required": {
                    "type": "boolean",
                    "example": false
                },
                "label": {
                    "type": "string",
                    "example": "Doe"
                },
                "name": {
                    "type": "string"
                },
                "placeholder": {
                    "type": "string",
                    "example": "Doe"
                },
                "property_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ek_entity_service.PropertyOption"
                    }
                },
                "status": {
                    "type": "boolean",
                    "example": true
                },
                "type": {
                    "type": "string",
                    "example": "radio"
                },
                "validation": {
                    "type": "string",
                    "example": "This is required"
                },
                "with_confirmation": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "ek_entity_service.Region": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ru_name": {
                    "type": "string"
                },
                "soato": {
                    "type": "integer"
                }
            }
        },
        "ek_entity_service.RevertEntityStatus": {
            "type": "object",
            "properties": {
                "action_id": {
                    "type": "string"
                },
                "revert_comment": {
                    "type": "string"
                }
            }
        },
        "ek_entity_service.Status": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "parent_status_id": {
                    "type": "string"
                },
                "ru_name": {
                    "type": "string"
                },
                "type_code": {
                    "type": "integer"
                }
            }
        },
        "ek_entity_service.StatusSwag": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "color": {
                    "type": "string",
                    "example": "blue"
                },
                "description": {
                    "type": "string",
                    "example": "Description"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "example": "hokimiyat_accepted"
                },
                "parent_status_id": {
                    "type": "string",
                    "example": "60d6da512c29bfd27ba95a67"
                },
                "ru_name": {
                    "type": "string"
                },
                "type_code": {
                    "type": "integer"
                }
            }
        },
        "ek_entity_service.UpdateEntityDraftPropertySwag": {
            "type": "object",
            "required": [
                "entity_properties"
            ],
            "properties": {
                "entity_properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ek_entity_service.EntityProperty"
                    }
                }
            }
        },
        "ek_entity_service.UpdateEntityDraftStatus": {
            "type": "object",
            "properties": {
                "entity_draft_id": {
                    "type": "string"
                },
                "status_id": {
                    "type": "string"
                }
            }
        },
        "ek_entity_service.UpdateEntityStatus": {
            "type": "object",
            "properties": {
                "entity_id": {
                    "type": "string"
                },
                "status_id": {
                    "type": "string"
                }
            }
        },
        "ek_entity_service.UpdateWithActionIDEntitySwag": {
            "type": "object",
            "required": [
                "action_description",
                "action_type",
                "deadline",
                "entity_files",
                "entity_gallery",
                "entity_properties",
                "status_id"
            ],
            "properties": {
                "action_description": {
                    "type": "string"
                },
                "action_type": {
                    "type": "string"
                },
                "deadline": {
                    "type": "integer"
                },
                "entity_files": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "entity_gallery": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "entity_properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ek_entity_service.EntityProperty"
                    }
                },
                "organizations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "status_id": {
                    "type": "string"
                }
            }
        },
        "ek_geo_service.GeoServiceRequest": {
            "type": "object",
            "properties": {
                "file_id": {
                    "type": "string"
                }
            }
        },
        "ek_geo_service.GeoServiceResponse": {
            "type": "object",
            "properties": {
                "geometry": {
                    "type": "object",
                    "$ref": "#/definitions/ek_geo_service.Geometry2"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "ek_geo_service.Geometry2": {
            "type": "object",
            "properties": {
                "coordinates": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "ek_integration_service.CheckOrderStatusResponse": {
            "type": "object",
            "properties": {
                "entity_id": {
                    "type": "string"
                },
                "progress": {
                    "type": "string"
                },
                "status_id": {
                    "type": "string"
                }
            }
        },
        "ek_setting_service.City": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "external_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ru_name": {
                    "type": "string"
                },
                "soato": {
                    "type": "integer"
                }
            }
        },
        "ek_setting_service.CreateAnnouncementSwag": {
            "type": "object",
            "properties": {
                "active_time": {
                    "type": "string"
                },
                "announcement": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "ek_setting_service.CreateGlobalActionSwag": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ek_setting_service.CreateGlobalEntityTypeSwag": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ek_setting_service.CreateUpdateCategorySwag": {
            "type": "object",
            "required": [
                "code",
                "name",
                "ru_name"
            ],
            "properties": {
                "code": {
                    "type": "integer"
                },
                "external_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "ru_name": {
                    "type": "string"
                },
                "soato": {
                    "type": "integer"
                }
            }
        },
        "ek_setting_service.CreateUpdateCitySwag": {
            "type": "object",
            "required": [
                "code",
                "name",
                "ru_name"
            ],
            "properties": {
                "code": {
                    "type": "integer"
                },
                "external_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "ru_name": {
                    "type": "string"
                },
                "soato": {
                    "type": "integer"
                }
            }
        },
        "ek_setting_service.CreateUpdateConstructionTypeSwag": {
            "type": "object",
            "required": [
                "name",
                "ru_name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "example"
                },
                "parent_id": {
                    "type": "string",
                    "example": "objectid"
                },
                "ru_name": {
                    "type": "string",
                    "example": "node"
                }
            }
        },
        "ek_setting_service.CreateUpdateDistrictSwag": {
            "type": "object",
            "properties": {
                "city_id": {
                    "type": "string"
                },
                "code": {
                    "type": "integer"
                },
                "external_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "region_id": {
                    "type": "string"
                },
                "ru_name": {
                    "type": "string"
                },
                "soato": {
                    "type": "integer"
                }
            }
        },
        "ek_setting_service.CreateUpdateProductSwag": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "discount_amount": {
                    "type": "integer"
                },
                "from_time": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "price_after": {
                    "type": "integer"
                },
                "price_before": {
                    "type": "integer"
                },
                "to_time": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "ek_setting_service.CreateUpdateRegionSwag": {
            "type": "object",
            "required": [
                "city_id",
                "code",
                "name",
                "ru_name",
                "soato"
            ],
            "properties": {
                "city_id": {
                    "type": "string"
                },
                "code": {
                    "type": "integer"
                },
                "external_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "ru_name": {
                    "type": "string"
                },
                "soato": {
                    "type": "integer"
                }
            }
        },
        "ek_setting_service.CreateUpdateUserSwag": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "ek_setting_service.Features": {
            "type": "object",
            "properties": {
                "geometry": {
                    "type": "object",
                    "$ref": "#/definitions/ek_setting_service.Geometry"
                },
                "properties": {
                    "type": "object",
                    "$ref": "#/definitions/ek_setting_service.Property"
                }
            }
        },
        "ek_setting_service.Geometry": {
            "type": "object",
            "properties": {
                "coordinates": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "ek_setting_service.GetAllRegionFilesResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ek_setting_service.RegionFiles"
                    }
                }
            }
        },
        "ek_setting_service.GisData": {
            "type": "object",
            "properties": {
                "features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ek_setting_service.Features"
                    }
                }
            }
        },
        "ek_setting_service.Property": {
            "type": "object",
            "properties": {
                "district": {
                    "type": "string"
                },
                "ending_date": {
                    "type": "string"
                },
                "firm": {
                    "type": "string"
                },
                "kml_folder": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "num_gorny": {
                    "type": "string"
                },
                "raw": {
                    "type": "string"
                },
                "receive_date": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "title_u": {
                    "type": "string"
                }
            }
        },
        "ek_setting_service.Region": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "object",
                    "$ref": "#/definitions/ek_setting_service.City"
                },
                "code": {
                    "type": "integer"
                },
                "external_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ru_name": {
                    "type": "string"
                },
                "soato": {
                    "type": "integer"
                }
            }
        },
        "ek_setting_service.RegionFiles": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "file_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "region": {
                    "type": "object",
                    "$ref": "#/definitions/ek_setting_service.Region"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "ek_setting_service.RegionFilesSwag": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "file_name": {
                    "type": "string"
                },
                "region_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "ek_setting_service.UpdateDistrictCostSwag": {
            "type": "object",
            "properties": {
                "cost_per_square": {
                    "type": "number"
                },
                "cost_start_date": {
                    "type": "string"
                }
            }
        },
        "ek_setting_service.UpdateDistrictTaxSwag": {
            "type": "object",
            "properties": {
                "tax_per_square": {
                    "type": "number"
                },
                "tax_start_date": {
                    "type": "string"
                }
            }
        },
        "ek_user_service.City": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ru_name": {
                    "type": "string"
                },
                "soato": {
                    "type": "integer"
                }
            }
        },
        "ek_user_service.CreateUpdateApplicantSwag": {
            "type": "object",
            "properties": {
                "applicant_type": {
                    "type": "string"
                },
                "birth_date": {
                    "type": "string"
                },
                "birth_place": {
                    "type": "string"
                },
                "citizenship": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "inn": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "middle_name": {
                    "type": "string"
                },
                "nationality": {
                    "type": "string"
                },
                "passport_expiry_date": {
                    "type": "string"
                },
                "passport_issue_date": {
                    "type": "string"
                },
                "passport_issue_place": {
                    "type": "string"
                },
                "passport_number": {
                    "type": "string"
                },
                "permanent_address": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "pin": {
                    "type": "string"
                },
                "user_type": {
                    "type": "string",
                    "example": "applicant"
                }
            }
        },
        "ek_user_service.CreateUpdateOrganizationSwag": {
            "type": "object",
            "required": [
                "code",
                "description",
                "full_name",
                "name",
                "status"
            ],
            "properties": {
                "code": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "ek_user_service.CreateUpdatePermissionSwag": {
            "type": "object",
            "required": [
                "name",
                "ru_name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ru_name": {
                    "type": "string"
                }
            }
        },
        "ek_user_service.CreateUpdateRoleSwag": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "code": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "description": "ExternalID     int32    ` + "`" + `json:\"external_id\" bson:\"external_id\"` + "`" + `",
                    "type": "boolean"
                }
            }
        },
        "ek_user_service.CreateUpdateStaffSwag": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "object",
                    "$ref": "#/definitions/ek_user_service.City"
                },
                "email": {
                    "type": "string"
                },
                "extra_info": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "inn": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "middle_name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string"
                },
                "passport_issue_date": {
                    "type": "string"
                },
                "passport_issue_place": {
                    "type": "string"
                },
                "passport_number": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "pinfl": {
                    "type": "string"
                },
                "region": {
                    "type": "object",
                    "$ref": "#/definitions/ek_user_service.Region"
                },
                "role_id": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "ek_user_service.GetActionHistoryByEntityIDSwag": {
            "type": "object",
            "required": [
                "entity_id"
            ],
            "properties": {
                "entity_id": {
                    "type": "string"
                }
            }
        },
        "ek_user_service.GetAllApplicantsRequestSwag": {
            "type": "object",
            "properties": {
                "full_name": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "passport_number": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "pinfl": {
                    "type": "string"
                },
                "user_type": {
                    "type": "string"
                }
            }
        },
        "ek_user_service.GetAllStaffsRequestSwag": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "organization_id": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "phone_number": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                },
                "search_string": {
                    "type": "string"
                },
                "soato": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "ek_user_service.LoginExistsRequest": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                }
            }
        },
        "ek_user_service.LoginExistsResponse": {
            "type": "object",
            "properties": {
                "exist": {
                    "type": "boolean"
                }
            }
        },
        "ek_user_service.LoginRequest": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "ek_user_service.LoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "verified": {
                    "type": "boolean"
                }
            }
        },
        "ek_user_service.Region": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ru_name": {
                    "type": "string"
                },
                "soato": {
                    "type": "integer"
                }
            }
        },
        "ek_user_service.UpdatePassword": {
            "type": "object",
            "properties": {
                "new_password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                }
            }
        },
        "ek_variables.CreateResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "ek_variables.EmptyResponse": {
            "type": "object"
        },
        "ek_variables.FailureResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "ek_variables.GlobalActionTypes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ek_variables.GlobalEntityType": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ek_variables.GlobalTypesResponse": {
            "type": "object",
            "properties": {
                "global_entity_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ek_variables.GlobalEntityType"
                    }
                }
            }
        },
        "ek_variables.SuccessResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "entity_service.ApplicantEntity": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "entity_service.ApplicantEntityDraft": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "entity_service.Draft": {
            "type": "object",
            "properties": {
                "applicant": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.ApplicantEntityDraft"
                },
                "city": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.EntityCity"
                },
                "comment": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "district": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.EntityDistrict"
                },
                "entity_number": {
                    "type": "integer"
                },
                "entity_soato": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "region": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.EntityRegion"
                },
                "status": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.Status"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity_service.Entity": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.EntityCity"
                },
                "created_at": {
                    "type": "string"
                },
                "district": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.EntityDistrict"
                },
                "entity_files": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "entity_number": {
                    "type": "string"
                },
                "entity_properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity_service.GetEntityProperty"
                    }
                },
                "entity_soato": {
                    "type": "string"
                },
                "entity_type_code": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "region": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.EntityRegion"
                },
                "registration_date": {
                    "type": "string"
                },
                "status": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.Status"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity_service.EntityCity": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ru_name": {
                    "type": "string"
                },
                "soato": {
                    "type": "integer"
                }
            }
        },
        "entity_service.EntityDistrict": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ru_name": {
                    "type": "string"
                },
                "soato": {
                    "type": "integer"
                }
            }
        },
        "entity_service.EntityDraft": {
            "type": "object",
            "properties": {
                "applicant": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.ApplicantEntity"
                },
                "city": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.EntityCity"
                },
                "comment": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "district": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.EntityDistrict"
                },
                "entity": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.Entity"
                },
                "entity_draft_number": {
                    "type": "string"
                },
                "entity_draft_soato": {
                    "type": "string"
                },
                "entity_gallery": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "entity_id": {
                    "type": "string"
                },
                "entity_properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity_service.GetEntityProperty"
                    }
                },
                "id": {
                    "type": "string"
                },
                "region": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.EntityRegion"
                },
                "status": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.Status"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity_service.EntityProperty": {
            "type": "object",
            "properties": {
                "property_id": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "entity_service.EntityRegion": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ru_name": {
                    "type": "string"
                },
                "soato": {
                    "type": "integer"
                }
            }
        },
        "entity_service.GetAllEntities": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.EntityCity"
                },
                "created_at": {
                    "type": "string"
                },
                "district": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.EntityDistrict"
                },
                "entity_files": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "entity_gallery": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "entity_number": {
                    "type": "string"
                },
                "entity_properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity_service.EntityProperty"
                    }
                },
                "entity_soato": {
                    "type": "string"
                },
                "entity_status_update": {
                    "type": "string"
                },
                "entity_type_code": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "region": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.EntityRegion"
                },
                "registration_date": {
                    "type": "string"
                },
                "status": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.Status"
                },
                "updated_at": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "entity_service.GetAllEntitiesResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity_service.GetAllEntities"
                    }
                }
            }
        },
        "entity_service.GetAllEntityDrafts": {
            "type": "object",
            "properties": {
                "applicant": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.ApplicantEntity"
                },
                "city": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.EntityCity"
                },
                "comment": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "district": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.EntityDistrict"
                },
                "entity": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.Entity"
                },
                "entity_draft_number": {
                    "type": "string"
                },
                "entity_draft_soato": {
                    "type": "string"
                },
                "entity_gallery": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "entity_id": {
                    "type": "string"
                },
                "entity_properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity_service.EntityProperty"
                    }
                },
                "id": {
                    "type": "string"
                },
                "region": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.EntityRegion"
                },
                "status": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.Status"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity_service.GetAllEntityDraftsResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "entity_drafts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity_service.GetAllEntityDrafts"
                    }
                }
            }
        },
        "entity_service.GetAllGroupPropertiesByTypeResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "group_properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity_service.GroupProperty"
                    }
                }
            }
        },
        "entity_service.GetAllGroupPropertiesResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "group_properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity_service.GetAllGroupProperty"
                    }
                }
            }
        },
        "entity_service.GetAllGroupProperty": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.OrganizationModel"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity_service.GetProperties"
                    }
                },
                "read_statuses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "boolean"
                },
                "step": {
                    "type": "integer"
                },
                "type": {
                    "type": "integer"
                },
                "write_statuses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "entity_service.GetAllGroupPropertyByStatusID": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_disable": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "organization": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.OrganizationModel"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity_service.Property"
                    }
                },
                "status": {
                    "type": "boolean"
                },
                "step": {
                    "type": "integer"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "entity_service.GetAllGroupPropertyByStatusIdResponse": {
            "type": "object",
            "properties": {
                "group_properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity_service.GetAllGroupPropertyByStatusID"
                    }
                }
            }
        },
        "entity_service.GetAllPropertiesResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity_service.Property"
                    }
                }
            }
        },
        "entity_service.GetAllStatusesResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "statuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity_service.Status"
                    }
                }
            }
        },
        "entity_service.GetCollection": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity_service.GetCollection"
                    }
                },
                "label": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "entity_service.GetCollectionResponse": {
            "type": "object",
            "properties": {
                "collections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity_service.GetCollection"
                    }
                }
            }
        },
        "entity_service.GetEntity": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.EntityCity"
                },
                "created_at": {
                    "type": "string"
                },
                "deadline": {
                    "type": "string"
                },
                "district": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.EntityDistrict"
                },
                "entity_drafts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity_service.Draft"
                    }
                },
                "entity_files": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "entity_gallery": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "entity_number": {
                    "type": "string"
                },
                "entity_properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity_service.GetEntityProperty"
                    }
                },
                "entity_soato": {
                    "type": "string"
                },
                "entity_status_update": {
                    "type": "string"
                },
                "entity_type_code": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "organizations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "region": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.EntityRegion"
                },
                "registration_date": {
                    "type": "string"
                },
                "revert_comment": {
                    "type": "string"
                },
                "status": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.Status"
                },
                "updated_at": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "entity_service.GetEntityProperty": {
            "type": "object",
            "properties": {
                "property": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.GetProperty"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "entity_service.GetProperties": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "integer"
                },
                "property_id": {
                    "type": "string"
                }
            }
        },
        "entity_service.GetProperty": {
            "type": "object",
            "properties": {
                "collection_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_required": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "placeholder": {
                    "type": "string"
                },
                "property_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity_service.PropertyOption"
                    }
                },
                "status": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "validation": {
                    "type": "string"
                },
                "with_confirmation": {
                    "type": "boolean"
                }
            }
        },
        "entity_service.GroupProperty": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization": {
                    "type": "object",
                    "$ref": "#/definitions/entity_service.OrganizationModel"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity_service.Property"
                    }
                },
                "read_statuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity_service.Status"
                    }
                },
                "status": {
                    "type": "boolean"
                },
                "step": {
                    "type": "integer"
                },
                "type": {
                    "type": "integer"
                },
                "write_statuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity_service.Status"
                    }
                }
            }
        },
        "entity_service.OrganizationModel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entity_service.Property": {
            "type": "object",
            "properties": {
                "collection_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_required": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "placeholder": {
                    "type": "string"
                },
                "property_options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity_service.PropertyOption"
                    }
                },
                "status": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "validation": {
                    "type": "string"
                },
                "with_confirmation": {
                    "type": "boolean"
                }
            }
        },
        "entity_service.PropertyOption": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "entity_service.Status": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "color": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "parent_status_id": {
                    "type": "string"
                },
                "ru_name": {
                    "type": "string"
                },
                "type_code": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "setting_service.Announcement": {
            "type": "object",
            "properties": {
                "active_time": {
                    "type": "string"
                },
                "announcement": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "setting_service.Category": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ru_name": {
                    "type": "string"
                },
                "soato": {
                    "type": "integer"
                }
            }
        },
        "setting_service.City": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ru_name": {
                    "type": "string"
                },
                "soato": {
                    "type": "integer"
                }
            }
        },
        "setting_service.ConstructionType": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                },
                "ru_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "setting_service.CreatedResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "setting_service.District": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "object",
                    "$ref": "#/definitions/setting_service.City"
                },
                "code": {
                    "type": "integer"
                },
                "cost": {
                    "type": "object",
                    "$ref": "#/definitions/setting_service.DistrictCost"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "object",
                    "$ref": "#/definitions/setting_service.Region"
                },
                "ru_name": {
                    "type": "string"
                },
                "soato": {
                    "type": "integer"
                },
                "tax": {
                    "type": "object",
                    "$ref": "#/definitions/setting_service.DistrictTax"
                }
            }
        },
        "setting_service.DistrictCost": {
            "type": "object",
            "properties": {
                "cost_per_square": {
                    "type": "number"
                },
                "cost_start_date": {
                    "type": "string"
                }
            }
        },
        "setting_service.DistrictTax": {
            "type": "object",
            "properties": {
                "tax_per_square": {
                    "type": "number"
                },
                "tax_start_date": {
                    "type": "string"
                }
            }
        },
        "setting_service.GetAllAnnouncementsResponse": {
            "type": "object",
            "properties": {
                "announcements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/setting_service.Announcement"
                    }
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "setting_service.GetAllCategoriesResponse": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/setting_service.Category"
                    }
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "setting_service.GetAllCitiesResponse": {
            "type": "object",
            "properties": {
                "cities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/setting_service.City"
                    }
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "setting_service.GetAllConstructionTypesResponse": {
            "type": "object",
            "properties": {
                "construction_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/setting_service.ConstructionType"
                    }
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "setting_service.GetAllDistrictsResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "districts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/setting_service.District"
                    }
                }
            }
        },
        "setting_service.GetAllProductsResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/setting_service.Product"
                    }
                }
            }
        },
        "setting_service.GetAllRegionsResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/setting_service.Region"
                    }
                }
            }
        },
        "setting_service.GetAllUsersResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/setting_service.User"
                    }
                }
            }
        },
        "setting_service.GlobalSetting": {
            "type": "object",
            "properties": {
                "construction_cost": {
                    "type": "integer"
                },
                "land_tax_juridical": {
                    "type": "integer"
                },
                "land_tax_physical": {
                    "type": "integer"
                },
                "minimum_wage": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "setting_service.Product": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "object",
                    "$ref": "#/definitions/setting_service.Category"
                },
                "description": {
                    "type": "string"
                },
                "discount_amount": {
                    "type": "integer"
                },
                "from_time": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "object",
                    "$ref": "#/definitions/setting_service.User"
                },
                "price_after": {
                    "type": "integer"
                },
                "price_before": {
                    "type": "integer"
                },
                "to_time": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "setting_service.Region": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "object",
                    "$ref": "#/definitions/setting_service.City"
                },
                "code": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ru_name": {
                    "type": "string"
                },
                "soato": {
                    "type": "integer"
                }
            }
        },
        "setting_service.User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "image_url": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "setting_service.UserExistsResponse": {
            "type": "object",
            "properties": {
                "exist": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "user_service.ActionHistory": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "entity_id": {
                    "type": "string"
                },
                "entity_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updated_fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user_service.UpdatedFields"
                    }
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "user_service.Applicant": {
            "type": "object",
            "properties": {
                "applicant_type": {
                    "type": "string"
                },
                "birth_date": {
                    "type": "string"
                },
                "birth_place": {
                    "type": "string"
                },
                "citizenship": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "inn": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "middle_name": {
                    "type": "string"
                },
                "nationality": {
                    "type": "string"
                },
                "passport_expiry_date": {
                    "type": "string"
                },
                "passport_issue_date": {
                    "type": "string"
                },
                "passport_issue_place": {
                    "type": "string"
                },
                "passport_number": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "permanent_address": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "pin": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_type": {
                    "type": "string"
                }
            }
        },
        "user_service.CreateResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "user_service.GetAllActionHistoriesResponse": {
            "type": "object",
            "properties": {
                "action_histories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user_service.ActionHistory"
                    }
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "user_service.GetAllApplicantsResponse": {
            "type": "object",
            "properties": {
                "applicants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user_service.Applicant"
                    }
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "user_service.GetAllOrganizationsResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "organizations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user_service.Organization"
                    }
                }
            }
        },
        "user_service.GetAllRolesResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user_service.Role"
                    }
                }
            }
        },
        "user_service.GetAllStaffsResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "staffs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user_service.Staff"
                    }
                }
            }
        },
        "user_service.GetRole": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "user_service.Organization": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "external_id": {
                    "type": "integer"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "user_service.Permission": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ru_name": {
                    "type": "string"
                }
            }
        },
        "user_service.Role": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization": {
                    "type": "object",
                    "$ref": "#/definitions/user_service.Organization"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user_service.Permission"
                    }
                },
                "status": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "user_service.Staff": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "object",
                    "$ref": "#/definitions/user_service.StaffCity"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "external_id": {
                    "type": "integer"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "inn": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "middle_name": {
                    "type": "string"
                },
                "organization": {
                    "type": "object",
                    "$ref": "#/definitions/user_service.Organization"
                },
                "passport_issue_date": {
                    "type": "string"
                },
                "passport_issue_place": {
                    "type": "string"
                },
                "passport_number": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "pinfl": {
                    "type": "string"
                },
                "policy": {
                    "type": "integer"
                },
                "region": {
                    "type": "object",
                    "$ref": "#/definitions/user_service.StaffRegion"
                },
                "role": {
                    "type": "object",
                    "$ref": "#/definitions/user_service.GetRole"
                },
                "soato": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                },
                "unique_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_type": {
                    "type": "string"
                },
                "verified": {
                    "type": "boolean"
                }
            }
        },
        "user_service.StaffCity": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ru_name": {
                    "type": "string"
                },
                "soato": {
                    "type": "integer"
                }
            }
        },
        "user_service.StaffRegion": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ru_name": {
                    "type": "string"
                },
                "soato": {
                    "type": "integer"
                }
            }
        },
        "user_service.UpdatedFields": {
            "type": "object",
            "properties": {
                "name_of_field": {
                    "type": "string"
                },
                "new_value": {
                    "type": "string"
                },
                "old_value": {
                    "type": "string"
                }
            }
        },
        "v1.FilesResponse": {
            "type": "object",
            "properties": {
                "file_path": {
                    "type": "string"
                },
                "file_url": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
